# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: push

jobs:
  change-detection:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      operator-check-components: ${{ steps.set-operators-matrix.outputs.operator-check }}
    steps:
      - name: Filter changes for operator
        id: filter_python_simple_check
        uses: actions/github-script@v6
        with:
          script: |
            const changes = ['training-operator', 'inference-operator'];
            const operatorCheck = [
              'inference-operator', 'training-operator'
            ];
            const operatorChanges = changes.filter((change) => operatorCheck.includes(change));
            core.setOutput('operator-check', operatorChanges);
    # - id: set-operators-matrix
    #   run: |
    #     echo "::set-output name=matrix::{\"include\":[{\"project\":\"interference\"},{\"project\":\"trainning\"}]}"
  checks-matrix:
    name: ${{ matrix.project }} operator checks
    uses: ./.github/workflows/checks.yml
    with:
      operator_type: ${{ matrix.project }}
    strategy:
      fail-fast: false
      #matrix: ${{fromJSON(needs.change-detection.outputs.matrix)}}
      matrix:
      component: ${{ fromJSON(needs.change-detection.outputs.operator-check-components) }}
    needs: change-detection

# name: build
# on: push
# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     outputs:
#       matrix: ${{ steps.set-matrix.outputs.matrix }}
#     steps:
#       - id: set-matrix
#         run: echo "matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}" >> $GITHUB_OUTPUT
#   job2:
#     needs: job1
#     runs-on: ubuntu-latest
#     strategy:
#       matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
#     steps:
#       - run: build